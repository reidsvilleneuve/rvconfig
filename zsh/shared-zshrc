# Env vars
IGNOREEOF=10   # Shell only exists after the 10th consecutive Ctrl-d
set -o ignoreeof  # In case above command doesn't work
ZSH_THEME="avit"
COMPLETION_WAITING_DOTS="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"
plugins=(git vi-mode tmux)

export EDITOR=vim
export VISUAL=vim
export RVDEV_PROJECT_ROOT="$HOME"

# Aliases

alias npm-exec='PATH=$(npm bin):$PATH'
alias fix='reset; stty sane; tput rs1; clear; echo -e "\033c"'
alias gp-new='git push --set-upstream origin $(current_branch)'
alias gtp='cd $RVDEV_PROJECT_ROOT'
alias _hard-gl='git fetch && git reset --hard origin/$(current_branch)'
alias debug-jest='node --inspect-brk node_modules/.bin/jest --runInBand'
alias debug-jest-watch='nodemon --inspect-brk node_modules/.bin/jest --runInBand'

# Misc

ulimit -n 2048
bindkey -v

autoload -U add-zsh-hook
load-project-locals() {
  # NVM autoload -- Slow. Enabled so that I don't forget to change versions.

  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version="$(nvm version "$(cat "${nvmrc_path}")")"

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version..."
    nvm use default
  fi

  # Project zshrc

  local current_directory="$(pwd)"
  local local_zshrc_path="$current_directory/.rvdev/zshrc"
  if [ -f "$local_zshrc_path" ]; then
    # TODO: There is probably a better place for this:
    export RVDEV_PROJECT_ROOT="$current_directory"
    echo "Project directory set to $RVDEV_PROJECT_ROOT"

    if [[ "${PROJECT_ZSHRC_WHITELIST[@]}" =~ "$current_directory" ]]; then
      source "$local_zshrc_path"
      echo "Project zshrc loaded."
    else
      echo "Warning: Non-whitelisted project zshrc found for this directory. ($current_directory)"
    fi
  fi
}
add-zsh-hook chpwd load-project-locals
load-project-locals
