" TODO: 

"- See https://github.com/mcantor/no_plugins/blob/master/no_plugins.vim
"  for some tricks. (Only fuzzy finding path trick used here so far)

"- Consider VERY light non-supported syntax plugins (Scala / Clojure?)

" First run steps:

" -Optional: Symlink rvconfig/vim/.vim-light/colors to ~/.vim/colors if
"  Darcula is desired

" --- Options ---

let g:RvDev_CurrentConfigType = 'light'

" --- Shared config ---
source ~/rvconfig/nvim-vim-shared/shared.vim

" --- Vi compatibility is not important here ---
set nocompatible

" --- Syntax highlighting ---
syntax on

" --- Search ---
set hlsearch " Highlight search terms
set incsearch " Search while typing in search query

" ---Tab settings ---
" TODO: Implement tab- space toggle?
set tabstop=2 shiftwidth=2 smarttab expandtab

" --- Command line completion ---
set wildmode=longest:list,full
set wildmenu

" ---Relative line numbers -  TODO: Implement toggle. ---
set nu rnu

" --- Easier buffer switching ---
nnoremap \b :ls<cr>:b<space>

" ---Buffer- only session save ---
nnoremap <silent> \s :set sessionoptions=buffers<cr>:mksession!<cr>:echo "Session saved"<cr>
nnoremap <silent> \l :so Session.vim<cr>:echo "Session loaded"<cr>

" --- Stops ex mode ---
nnoremap Q <nop>

" --- Clear last search highlighting ---
nnoremap <silent> <Space> :noh<cr>

" --- Diff unsaved buffer with previously saved version ---
nnoremap <silent> \d :w !diff % -<cr>

" --- Show whitespace ---
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
set list

" --- Automatic commands ---
augroup BufFileActions
  autocmd!

  " Spelling setup
  autocmd BufRead,BufNewFile * setlocal spell spelllang=en_us

  " Disable mouse
  autocmd BufEnter,BufNewFile * set mouse=

  " Underline in insert mode
  autocmd InsertEnter,InsertLeave * set cul!
augroup END

" --- Git ---
let @r = "j}kecf" " Fixup all commits in interactive rebase

" ---%% - > current file directory in Command mode. ---
cabbr %% <C-R>=expand('%:p:h')<CR>

" --- Quick visual mode 'macros' ---
vnoremap \q :norm 

" --- Stops <Esc> delay ---
set ttimeoutlen=50

" --- Copy current relative/full file path to system clipboard ---
nnoremap <silent> \c :let @+=@%<cr>:echo "Current file's relative path copied to system clipboard"<cr>
nnoremap <silent> \C :let @+=expand('%:p')<cr>:echo "Current file's full path copied to system clipboard"<cr>

" --- Quicker macro execution ---
set lazyredraw

" --- Plugin on for netrw ---
filetype plugin on

" --- Fuzzy-finding ---
" Provides tab-completion for all file-related tasks
" Hit tab to :find by partial match
" Use * to make it fuzzy
set path+=**

" --- Indent on newline ---
set autoindent

" --- Colors ---

try
  " To keep things simple, this colorscheme is kept in this repo. Update at:
  " https://github.com/blueshirts/darcula
  " TODO: If blueshirts starts updating this commonly, make this a git submodule to decrease maintenance
  colo darcula
catch /^Vim\%((\a\+)\)\=:E185/
  colo industry
endtry

" --- Simple status line ---
set statusline+=%F\ %l\:%c
set laststatus=2 " Always show status line

" --- Backspace normalization ---
set backspace=2
